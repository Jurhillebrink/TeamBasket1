sum(x ^ 2)
}
lst <- list(c(10, 4, 7), c(3, 2, 5))
sapply(
, sum_of_squares)
sum_of_squares <- function(x) {
sum(x ^ 2)
}
lst <- list(c(10, 4, 7), c(3, 2, 5))
sapply(
1, sum_of_squares)
sum_of_squares <- function(x) {
sum(x ^ 2)
}
lst <- list(c(10, 4, 7), c(3, 2, 5))
sapply(
2, sum_of_squares)
sapply(2, sum_of_squares)
sapply(lst, sum_of_squares)
c(FALSE, TRUE) || c(FALSE, FALSE)
c(FALSE, TRUE) || c(TRUE, FALSE)
c(FALSE, TRUE) || c(FALSE, TRUE)
##needed for datamanipulation
install.packages("dplyr")
install.packages("DBI")
install.packages("rJava")
install.packages("RJBDC")
install.packages("sqldf")
shiny::runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
View(ui)
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
shiny::runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
shiny::runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
shiny::runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
install.packages("shinyAce")
install.packages("sendmailR")
shinyUI(pageWithSidebar(
headerPanel("Email sender"),
sidebarPanel(
textInput("from", "From:", value="from@gmail.com"),
textInput("to", "To:", value="to@gmail.com"),
textInput("subject", "Subject:", value=""),
actionButton("send", "Send mail")
),
mainPanel(
aceEditor("message", value="write message here")
)
))
library(shinyAce)
library(sendmailR)
shinyServer(function(input, output, session) {
observe({
if(is.null(input$send) || input$send==0) return(NULL)
from <- isolate(input$from)
to <- isolate(input$to)
subject <- isolate(input$subject)
msg <- isolate(input$message)
sendmail(from, to, subject, msg)
})
library(shinyAce)
library(sendmailR)
shinyUI(pageWithSidebar(
headerPanel("Email sender"),
sidebarPanel(
textInput("from", "From:", value="from@gmail.com"),
textInput("to", "To:", value="to@gmail.com"),
textInput("subject", "Subject:", value=""),
actionButton("send", "Send mail")
),
mainPanel(
aceEditor("message", value="write message here")
)
))
shinyServer(function(input, output, session) {
observe({
if(is.null(input$send) || input$send==0) return(NULL)
from <- isolate(input$from)
to <- isolate(input$to)
subject <- isolate(input$subject)
msg <- isolate(input$message)
sendmail(from, to, subject, msg)
})
})
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
library(mailR)
sender <- "passresetcto@gmail.com"
recipients <- c("tim.vlaar@hva.nl")
sendmail(from = sender,
to = recipients,
subject="Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.gmail.com", port = 465,
user.name="passresetcto@gmail.com", passwd= "z0ik3Rt9", ssl=TRUE),
authenticate = TRUE,
send = TRUE)
library("mailR", lib.loc="~/R/win-library/3.4")
library("R.utils", lib.loc="~/R/win-library/3.4")
library("R.methodsS3", lib.loc="~/R/win-library/3.4")
sender <- "passresetcto@gmail.com"
recipients <- c("tim.vlaar@hva.nl")
sendmail(from = sender,
to = recipients,
subject="Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.gmail.com", port = 465,
user.name="passresetcto@gmail.com", passwd= "z0ik3Rt9", ssl=TRUE),
authenticate = TRUE,
send = TRUE)
library(shiny)
library(mailR)
install.packages("R.oo")
library(mailR)
ui =fluidPage(
fluidRow(
div(id = "login",
wellPanel(title = "Mail your report",
textInput("to", label = "To:", placeholder = "To:"),
textInput("sub","Subject:"),
textInput("msg","Message:"),
actionButton("mailButton",label = "Send mail")
)
))
)
server = function(input, output, session) {
observeEvent(input$mailButton,{
isolate({
sendmail(from = "passresetcto@gmail.com",
to = input$to,
subject = input$sub,
body = input$msg,
smtp = list(host.name = "smtp.gmail.com", port = 465, user.name = "passresetcto@gmail.com", passwd = "z0ik3Rt9", ssl = TRUE),                authenticate = TRUE,
html = TRUE,
send = TRUE)
})
})
}
runApp(list(ui = ui, server = server))
ui =fluidPage(
fluidRow(
div(id = "login",
wellPanel(title = "Mail your report",
textInput("to", label = "To:", placeholder = "To:"),
textInput("sub","Subject:"),
textInput("msg","Message:"),
actionButton("mailButton",label = "Send mail")
)
))
)
server = function(input, output, session) {
observeEvent(input$mailButton,{
isolate({
send.mail(from = "passresetcto@gmail.com",
to = input$to,
subject = input$sub,
body = input$msg,
smtp = list(host.name = "smtp.gmail.com", port = 465, user.name = "passresetcto@gmail.com", passwd = "z0ik3Rt9", ssl = TRUE),                authenticate = TRUE,
html = TRUE,
send = TRUE)
})
})
}
runApp(list(ui = ui, server = server))
ui =fluidPage(
fluidRow(
div(id = "login",
wellPanel(title = "Mail your report",
textInput("to", label = "To:", placeholder = "To:"),
textInput("sub","Subject:"),
textInput("msg","Message:"),
actionButton("mailButton",label = "Send mail")
)
))
)
#getplayer geeft email terug.
#
#
#
#
server = function(input, output, session) {
observeEvent(input$mailButton,{
isolate({
send.mail(from = "passresetcto@gmail.com",
to = input$to,
subject = input$sub,
body = input$msg,
smtp = list(host.name = "smtp.gmail.com", port = 465, user.name = "passresetcto@gmail.com", passwd = "z0ik3Rt9", ssl = TRUE),                authenticate = TRUE,
html = TRUE,
send = TRUE)
})
})
}
runApp(list(ui = ui, server = server))
View(ui)
ui =fluidPage(
fluidRow(
div(id = "login",
wellPanel(title = "Mail your report",
textInput("to", label = "To:", placeholder = "To:"),
textInput("sub","Subject:"),
textInput("msg","Message:"),
actionButton("mailButton",label = "Send mail")
)
))
)
#getplayer geeft email terug.
#
#
#
#
server = function(input, output, session) {
observeEvent(input$mailButton,{
isolate({
send.mail(from = "passresetcto@gmail.com",
to = input$to,
subject = input$sub,
body = input$msg,
smtp = list(host.name = "smtp.gmail.com", port = 465, user.name = "passresetcto@gmail.com", passwd = "z0ik3Rt9", ssl = TRUE),                authenticate = TRUE,
html = TRUE,
send = TRUE)
})
})
}
runApp(list(ui = ui, server = server))
library(shiny)
library(mailR)
ui =fluidPage(
fluidRow(
div(id = "login",
wellPanel(title = "Mail your report",
textInput("to", label = "To:", placeholder = "To:"),
textInput("sub","Subject:"),
textInput("msg","Message:"),
actionButton("mailButton",label = "Send mail")
)
))
)
#getplayer geeft email terug.
#
#
#
#
server = function(input, output, session) {
observeEvent(input$mailButton,{
isolate({
send.mail(from = "passresetcto@gmail.com",
to = input$to,
subject = input$sub,
body = input$msg,
smtp = list(host.name = "smtp.gmail.com", port = 465, user.name = "passresetcto@gmail.com", passwd = "z0ik3Rt9", ssl = TRUE),                authenticate = TRUE,
html = TRUE,
send = TRUE)
})
})
}
runApp(list(ui = ui, server = server))
isValidEmail <- function(x) {
grepl("\\<[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\>", as.character(x),
ignore.case=TRUE)
}
library(shiny)
library(mailR)
ui =fluidPage(
fluidRow(
div(id = "login",
wellPanel(title = "Mail your report",
textInput("to", label = "To:", placeholder = "To:"),
textInput("sub","Subject:"),
textInput("msg","Message:"),
actionButton("mailButton",label = "Send mail")
)
))
)
#getplayer geeft email terug.
#
#
#
#
isValidEmail <- function(x) {
grepl("\\<[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\>", as.character(x),
ignore.case=TRUE)
}
server = function(input, output, session) {
observeEvent(input$mailButton,{
if(isValidEmail(input$to)){
isolate({
send.mail(from = "passresetcto@gmail.com",
to = input$to,
subject = input$sub,
body = input$msg,
smtp = list(host.name = "smtp.gmail.com", port = 465, user.name = "passresetcto@gmail.com", passwd = "z0ik3Rt9", ssl = TRUE),                authenticate = TRUE,
html = TRUE,
send = TRUE)
})}
})
}
runApp(list(ui = ui, server = server))
library(shiny)
library(mailR)
ui =fluidPage(
fluidRow(
div(id = "login",
wellPanel(title = "Mail your report",
textInput("to", label = "To:", placeholder = "To:"),
textInput("sub","Subject:"),
textInput("msg","Message:"),
actionButton("mailButton",label = "Send mail")
)
))
)
isValidEmail <- function(x) {
grepl("\\<[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\>", as.character(x),
ignore.case=TRUE)
}
server = function(input, output, session) {
observeEvent(input$mailButton,{
if(isValidEmail(input$to)){
isolate({
send.mail(from = "passresetcto@gmail.com",
to = input$to,
subject = input$sub,
body = input$msg,
smtp = list(host.name = "smtp.gmail.com", port = 465, user.name = "passresetcto@gmail.com", passwd = "z0ik3Rt9", ssl = TRUE),                authenticate = TRUE,
html = TRUE,
send = TRUE)
})}
})
}
runApp(list(ui = ui, server = server))
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
?sha256
sha256("UJ?mg[uN5!")
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
sha256("<Ygry\\oC2%")
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
sha256("ObuQ3ZaP8%")
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
?paste0
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
samp<-c(2:9,letters,LETTERS,"!", "§", "$", "%", "&", "(", ")", "*")
paste(sample(samp,8),collapse="")
samp<-c(1:9,letters,LETTERS,"!")
paste(sample(samp,8),collapse="")
samp<-c(1:9,letters,LETTERS,"!")
paste(sample(samp,8),collapse="")
samp<-c(1:9,letters,LETTERS,"!")
paste(sample(samp,8),collapse="")
samp<-c(1:9,letters,LETTERS,"!")
paste(sample(samp,8),collapse="")
samp<-c(1:9,letters,LETTERS,"!")
paste(sample(samp,8),collapse="")
samp<-c(1:9,letters,LETTERS,"!")
paste(sample(samp,8),collapse="")
samp<-c(1:9,letters,LETTERS,"!")
paste(sample(samp,8),collapse="")
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/1. Data processing and storage/Workshop week 5A/10 RShiny JavaScript/busy-indicator')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
?updateTextInput
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
shiny::runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
sc <- spark_connect(master = "local")
library(sparklyr)
library(dplyr)
sc <- spark_connect(master = "local")
iris_tbl <- copy_to(sc, iris)
flights_tbl <- copy_to(sc, nycflights13::flights, "flights")
batting_tbl <- copy_to(sc, Lahman::Batting, "batting")
src_tbls(sc)
# filter by departure delay and print the first few records
flights_tbl %>% filter(dep_delay == 2)
delay <- flights_tbl %>%
group_by(tailnum) %>%
summarise(count = n(), dist = mean(distance), delay = mean(arr_delay)) %>%
filter(count > 20, dist < 2000, !is.na(delay)) %>%
collect
library(ggplot2)
ggplot(delay, aes(dist, delay)) +
geom_point(aes(size = count), alpha = 1/2) +
geom_smooth() +
scale_size_area(max_size = 2)
library(DBI)
iris_preview <- dbGetQuery(sc, "SELECT * FROM iris LIMIT 10")
iris_preview
shiny::runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
shiny::runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
shiny::runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/00 Code vorig semester')
shiny::runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
?dateInput
?image
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
?renderImage
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
test <- 2018-03-28 08:00:00
test <- "2018-03-28 08:00:00"
str(test)
as.POSIXct(test, "YYYY-mm-dd hh:mm:ss")
as.POSIXct(test, "yyyy-mm-dd hh:mm:ss")
as.POSIXct(test, tz = "", "%Y-%m-%d %H:%M:%OS")
test <- as.POSIXct(test, tz = "", "%Y-%m-%d %H:%M:%OS")
str(test)
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
test <- "2018-03-09 08:00:00"
as.POSIXct(test, tz = "", "%y-%m-%d %h:%m:%Os")
as.POSIXct(test, tz = "", "%Y-%m-%d %H:%M:%OS")
shiny::runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
?fluidRow
?box
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
teamData
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('C:/Users/tim/Desktop/onze code')
runApp('C:/Users/tim/Desktop/onze code')
required_packages = c(
"shiny",
"readr",
"tidyr",
"stringr",
"dplyr",
"ggplot2",
"grid",
"jpeg",
"RCurl",
"DBI",
"png",
"data.table",
"mongolite",
"shinydashboard",
"shinyWidgets",
"shinythemes",
"plotly",
"markdown",
"shinyjs",
"RJDBC",
"RODBC",
"openssl",
"V8",
"DT",
"shinyWidgets",
"mailR",
#optional
"hexbin",
"httr",
"jsonlite"
)
packages_to_install = required_packages[!(required_packages %in% installed.packages()[, 1])]
if (length(packages_to_install) > 0) {
install.packages(packages_to_install, repos = "https://cran.rstudio.com")
}
runApp('C:/Users/tim/Desktop/onze code')
runApp('C:/Users/tim/Desktop/onze code')
runApp('C:/Users/tim/Desktop/onze code')
runApp('C:/Users/tim/Desktop/onze code')
runApp('C:/Users/tim/Desktop/onze code')
runApp('C:/Users/tim/Desktop/onze code')
runApp('C:/Users/tim/Desktop/Final code')
shiny::runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
shiny::runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
runApp('HBO-ICT/Jaar 2/3. Big Data/Project/TeamBasket1')
